{"version":3,"sources":["models/Event.js","models/EventTypes.js","store/index.js","components/Event.js","components/Day.js","components/Calendar.js","components/DraggableEvent.js","components/Draggables.js","components/Navigation.js","views/Main.js","App.js","serviceWorker.js","index.js"],"names":["Event","startDate","endDate","type","description","Object","classCallCheck","this","moment","freeze","outdoor","social","learning","general","updateLocale","mk","exampleEvent","set","year","month","day","hour","minutes","EventTypes","exampleEvent2","Store","currentDate","eventData","2019","2","23","eventsForDay","newEvent","length","some","eventInDay","isAfter","currentDay","get","slice","sort","a","b","date","event","_this","Promise","resolve","reject","_this$currentDate$toO","toObject","years","months","seconds","milliseconds","_isEventOverlapping","push","clone","_sortEvents","filter","e","originalEvent","updatedEvent","_this2","arrayWithoutOriginal","ev","map","add","subtract","_this3","computed","format","startingDay","startOf","isoWeekday","daysInMonth","eventsInMonth","weekdays","decorate","observable","setCurrentMonth","action","setCurrentYear","addMonth","subtractMonth","removeEvent","navigationDateFormat","beautifulFormat","dayNames","store","_calculateBorder","components_Event","_ref","onRemoveEvent","onOpenModal","react_default","createElement","className","concat","style","padding","onDoubleClick","aria-hidden","fontSize","lineHeight","float","cursor","onClick","spec","canDrop","props","active","drop","monitor","component","setState","modalState","_openModal","createNewEventbyType","getItem","DropTarget","connect","connectDropTarget","dropTarget","isOver","observer","_Component","Day","possibleConstructorReturn","getPrototypeOf","call","eventsInDay","state","modalOpened","currentEvent","inherits","createClass","key","value","userSelect","width","toast","success","index","_removeEvent","addEventOnDay","then","succ","catch","err","error","updateEvent","from","to","hours","hour24","minute","undefined","classes","join","_determineClasses","_calculateStyles","_renderEvents","react_modal_lib_default","isOpen","ariaHideApp","overlayClassName","modalBorderColor","toUpperCase","react_timekeeper_lib_default","time","onChange","newTime","_updateCurrentEvent","name","cols","rows","currentTarget","marginRight","_closeModal","Component","Calendar","apply","arguments","dayName","justifyContent","alignItems","marginTop","Math","random","toString","substring","monthData","_this$props$monthData","inactiveDaysBefore","Array","components_Day","_randomKeyGenerator","activeDays","_","i","daysDisplayed","inactiveDaysAfter","toConsumableArray","display","flexWrap","_renderDayNames","_renderDays","DraggableEvent","connectDragSource","eventType","charAt","DragSource","beginDrag","endDrag","dragSource","isDragging","Draggables","draggablesRef","React","createRef","ticking","window","requestAnimationFrame","current","scrollY","addEventListener","_scrollListenerFunction","_this4","removeEventListener","ref","transition","styles","draggablesBody","components_DraggableEvent","height","flexDirection","withRouter","Navigation","history","prevDate","middleText","nextDate","Main","match","params","Draggables_Draggables","components_Navigation","components_Calendar","assign","DragDropContext","HTML5Backend","App","BrowserRouter","Route","exact","path","lib","autoClose","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.602537cb.chunk.js","sourcesContent":["import moment from \"moment\";\r\n\r\nexport default class Event {\r\n  constructor(startDate, endDate, type, description){\r\n    this.startDate = startDate;\r\n    this.endDate = endDate;\r\n    this.type = type;\r\n    this.description = description;\r\n  }\r\n\r\n  clone(){\r\n    return new Event(new moment(this.startDate), new moment(this.endDate), this.type, this.description);\r\n  }\r\n\r\n  startDate = null;\r\n  endDate = null;\r\n  type = null;\r\n  description = null;\r\n}","export default Object.freeze({\r\n  outdoor: 'Надворешен',\r\n  social: 'Социјален',\r\n  learning: 'Учење',\r\n  general: 'Генерален'\r\n})","import { observable, computed, action, decorate } from 'mobx';\r\nimport { get, set } from 'lodash';\r\nimport Event from '../models/Event';\r\nimport EventTypes from '../models/EventTypes';\r\nimport moment from 'moment';\r\nimport mk from 'moment/locale/mk'\r\nmoment.updateLocale('mk', mk);\r\n\r\n\r\nconst exampleEvent = new Event(\r\n  new moment().set({\r\n    year: 2019,\r\n    month: 2,\r\n    day: 23,\r\n    hour: 1,\r\n    minutes: 0\r\n  }),\r\n  new moment().set({\r\n    year: 2019,\r\n    month: 2,\r\n    day: 23,\r\n    hour: 2,\r\n    minutes: 0\r\n  }),\r\n  EventTypes.outdoor,\r\n  'Ова е пример Настан'\r\n)\r\n\r\nconst exampleEvent2 = new Event(\r\n  new moment().set({\r\n    year: 2019,\r\n    month: 2,\r\n    day: 23,\r\n    hour: 2,\r\n    minutes: 0\r\n  }),\r\n  new moment().set({\r\n    year: 2019,\r\n    month: 2,\r\n    day: 23,\r\n    hour: 3,\r\n    minutes: 0\r\n  }),\r\n  EventTypes.social,\r\n  'Ова е пример Настан2'\r\n)\r\n\r\nclass Store {\r\n  currentDate = moment();\r\n  eventData = {\r\n    '2019': {\r\n      '2': {\r\n        '23': [exampleEvent, exampleEvent2]\r\n      }\r\n    }\r\n  };\r\n\r\n  _isEventOverlapping(eventsForDay, newEvent) {\r\n    if (eventsForDay.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    //barem edno da vrati true rezultatot e deka ima konflikt\r\n    return eventsForDay.some(eventInDay => {\r\n\r\n      //pocnal pred a zavrsil posle start na postoeckiot event\r\n      if (eventInDay.startDate.isAfter(newEvent.startDate) && newEvent.endDate.isAfter(eventInDay.startDate)) {\r\n        return true;\r\n      }\r\n      //pocnal pred a zavrsil posle end na postoeckiot event\r\n      if (eventInDay.endDate.isAfter(newEvent.startDate) && newEvent.endDate.isAfter(eventInDay.endDate)) {\r\n        return true;\r\n      }\r\n      //edniot e vo drugiot\r\n      if (eventInDay.startDate.isAfter(newEvent.startDate) && newEvent.endDate.isAfter(eventInDay.endDate)) {\r\n        return true\r\n      }\r\n\r\n      return false;\r\n    })\r\n\r\n  }\r\n\r\n  _sortEvents(currentDay) {\r\n    let eventsForDay = get(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1, currentDay], []);\r\n\r\n    eventsForDay = eventsForDay.slice().sort((a, b) => {\r\n      if (!a.startDate.isAfter(b.startDate)) {\r\n        return -1\r\n      } else {\r\n        return 1\r\n      }\r\n    });\r\n\r\n    set(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1, currentDay], eventsForDay);\r\n  }\r\n\r\n  addEventOnDay(date, event) {\r\n    return new Promise((resolve, reject) => {\r\n      if (!get(this.eventData, [], null)) {\r\n        if (!event.endDate.isAfter(event.startDate)) {\r\n          reject('Почетното време треба да е помало од крајното.')\r\n          return;\r\n        } else {\r\n          let { years: year, months: month } = this.currentDate.toObject()\r\n          month++;\r\n\r\n          if (!this.eventData[year]) {\r\n            this.eventData[year] = {};\r\n          }\r\n\r\n          if (!this.eventData[year][month]) {\r\n            this.eventData[year][month] = {}\r\n          }\r\n\r\n          if (!this.eventData[year][month][date]) {\r\n            this.eventData[year][month][date] = [];\r\n          }\r\n\r\n          event.startDate.seconds(0).milliseconds(0);\r\n          event.endDate.seconds(0).milliseconds(0);\r\n\r\n          let eventsForDay = get(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1, date], []);\r\n          let isOverlapping = this._isEventOverlapping(eventsForDay, event);\r\n\r\n          if (isOverlapping) {\r\n            reject('Има преклопување на настани.')\r\n          } else {\r\n            this.eventData[year][month][date].push(event.clone())\r\n            this._sortEvents(date);\r\n            resolve('Додавањето беше успешно.')\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  removeEvent(currentDay, event) {\r\n    let eventsForDay = get(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1, currentDay], []);\r\n\r\n    eventsForDay = eventsForDay.filter(e => e !== event);\r\n\r\n    set(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1, currentDay], eventsForDay);\r\n  }\r\n\r\n  updateEvent(currentDay, originalEvent, updatedEvent) {\r\n    return new Promise((resolve, reject) => {\r\n      if(updatedEvent.startDate.isAfter(updatedEvent.endDate)){\r\n        reject('Според квантната теорија времето може да тече назад, но во случајов тоа е недозволена операција.')\r\n      }\r\n      let eventsForDay = get(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1, currentDay], null);\r\n\r\n      let arrayWithoutOriginal = eventsForDay.filter(ev => ev !== originalEvent);\r\n\r\n      let isOverlapping = this._isEventOverlapping(arrayWithoutOriginal, updatedEvent);\r\n\r\n      if (isOverlapping) {\r\n        reject('Настанот неможе да се смени поради преклопување со друг настан.')\r\n        return;\r\n      } else {\r\n        eventsForDay = eventsForDay.map(e => {\r\n          if (e === originalEvent) {\r\n            return updatedEvent.clone()\r\n          }\r\n\r\n          return e;\r\n        });\r\n\r\n        set(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1, currentDay], eventsForDay);\r\n        this._sortEvents(currentDay)\r\n        resolve('Успешна промена.');\r\n      }\r\n    })\r\n  }\r\n\r\n  createNewEventbyType(type) {\r\n    return new Event(new moment(), new moment(), type, '')\r\n  }\r\n\r\n  setCurrentYear(year) {\r\n    this.currentDate.year(year);\r\n  }\r\n\r\n  setCurrentMonth(month) {\r\n    this.currentDate.month(--month);\r\n  }\r\n\r\n  addMonth() {\r\n    this.currentDate = this.currentDate.add(1, 'months');\r\n  }\r\n\r\n  subtractMonth() {\r\n    this.currentDate = this.currentDate.subtract(1, 'months');\r\n  }\r\n\r\n  get navigationDateFormat() {\r\n    return this.currentDate.format(\"/YYYY/M\");\r\n  }\r\n\r\n  get beautifulFormat() {\r\n    return this.currentDate.format(\"MMMM - YYYY\");\r\n  }\r\n\r\n  get monthData() {\r\n    return {\r\n      startingDay: this.currentDate.startOf('month').isoWeekday(),\r\n      daysInMonth: this.currentDate.daysInMonth(),\r\n      eventsInMonth: get(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1], [])\r\n    }\r\n  }\r\n\r\n  get dayNames() {\r\n    return moment.weekdays();\r\n  }\r\n\r\n  eventsInDay(day) {\r\n    return computed(() => {\r\n      return get(this.eventData, [this.currentDate.year(), this.currentDate.month() + 1, ++day], [])\r\n    }).get()\r\n  }\r\n}\r\n\r\ndecorate(Store, {\r\n  eventData: observable,\r\n  setCurrentMonth: action,\r\n  setCurrentYear: action,\r\n  addMonth: action,\r\n  subtractMonth: action,\r\n  removeEvent: action,\r\n  navigationDateFormat: computed,\r\n  beautifulFormat: computed,\r\n  dayNames: computed\r\n})\r\n\r\nconst store = new Store();\r\n\r\nexport default store;","import React from 'react';\r\nimport EventTypes from '../models/EventTypes';\r\n\r\nconst _calculateBorder = (type) => {\r\n  switch (type) {\r\n    case EventTypes.outdoor:\r\n      return 'bg-success text-white'\r\n    case EventTypes.social:\r\n      return 'bg-warning text-dark'\r\n    case EventTypes.learning:\r\n      return 'bg-info text-white';\r\n    case EventTypes.general:\r\n      return 'bg-secondary text-white'\r\n    default:\r\n      return 'bg-primary text-white'\r\n  }\r\n}\r\n\r\nexport default ({ event, onRemoveEvent, onOpenModal }) => {\r\n  return (\r\n    <li\r\n      className={`list-group-item ${_calculateBorder(event.type)}`}\r\n      style={{ padding: '2px' }}\r\n      onDoubleClick={() => onOpenModal(event)}\r\n    >\r\n      <span>{event.startDate.format('HH:mm')} - {event.endDate.format('HH:mm')}</span>\r\n\r\n      <span aria-hidden=\"true\"\r\n        style={{ fontSize: '20px', lineHeight: 1, float: 'right', cursor: 'pointer' }}\r\n        onClick={() => onRemoveEvent(event)}>&times;</span>\r\n    </li>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport Store from '../store';\r\nimport { observer } from 'mobx-react';\r\nimport Modal from 'react-modal';\r\nimport Event from './Event';\r\nimport Timekeeper from 'react-timekeeper';\r\nimport { toast } from 'react-toastify';\r\nimport { DropTarget } from 'react-dnd';\r\nimport EventTypes from '../models/EventTypes';\r\n\r\nconst spec = {\r\n  canDrop(props) {\r\n    return props.active;\r\n  },\r\n  drop(props, monitor, component) {\r\n    component.setState({ modalState: 'save' })\r\n    component._openModal(Store.createNewEventbyType(monitor.getItem().props.type))\r\n  }\r\n}\r\n\r\nconst collect = (connect, monitor) => {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    isOver: monitor.isOver(),\r\n    canDrop: monitor.canDrop()\r\n  }\r\n}\r\n\r\nexport default DropTarget('DraggableEvent', spec, collect)(observer(class Day extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.active = this.props.active;\r\n    this.currentDay = this.props.currentDay;\r\n    this.eventsInDay = this.props.eventsInDay;\r\n\r\n    this.state = { modalOpened: false, currentEvent: null, originalEvent: null, modalState: 'update' };\r\n  }\r\n  _calculateStyles() {\r\n    return {\r\n      cursor: this.active ? 'default' : 'not-allowed',\r\n      userSelect: this.active ? '' : 'none',\r\n      width: 'calc(100% / 7)'\r\n    }\r\n  }\r\n\r\n  _removeEvent(event, action) {\r\n    if (action === 'update') {\r\n      Store.removeEvent(this.currentDay, event);\r\n      toast.success('Настанот беше успешно избришан.')\r\n    }\r\n    this.setState({ modalOpened: false })\r\n    this.setState({ currentEvent: null })\r\n  }\r\n\r\n  _renderEvents() {\r\n    if (this.eventsInDay) {\r\n      return this.eventsInDay.map((event, index) => {\r\n        return (\r\n          <Event key={index}\r\n            event={event}\r\n            onRemoveEvent={(event) => this._removeEvent(event, this.state.modalState)}\r\n            onOpenModal={(event) => this._openModal(event)}\r\n          />\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  _openModal(event) {\r\n    this.setState({ modalOpened: true })\r\n    this.setState({ originalEvent: event })\r\n    this.setState({ currentEvent: event.clone() })\r\n\r\n  }\r\n\r\n  _closeModal(action) {\r\n    if (action === 'save') {\r\n      Store.addEventOnDay(this.currentDay, this.state.currentEvent)\r\n        .then(succ => {\r\n          toast.success(succ);\r\n        }).catch(err => {\r\n          toast.error(err)\r\n        })\r\n      this.setState({ modalState: 'update' })\r\n    } else if (action === 'update') {\r\n      Store.updateEvent(this.currentDay, this.state.originalEvent, this.state.currentEvent)\r\n        .then(succ => {\r\n          toast.success(succ)\r\n        }).catch(err => {\r\n          toast.error(err)\r\n        })\r\n    }\r\n\r\n    this.setState({ modalOpened: false })\r\n    this.setState({ currentEvent: null })\r\n  }\r\n\r\n  _updateCurrentEvent({ from, to, description }) {\r\n    let newEvent = this.state.currentEvent.clone();\r\n\r\n    if (from) {\r\n      newEvent.startDate.hours(from.hour24);\r\n      newEvent.startDate.minutes(from.minute);\r\n    }\r\n    if (to) {\r\n      newEvent.endDate.hours(to.hour24);\r\n      newEvent.endDate.minutes(to.minute);\r\n    }\r\n    if (description !== undefined) {\r\n      newEvent.description = description;\r\n    }\r\n\r\n    this.setState({ currentEvent: newEvent })\r\n  }\r\n\r\n  _determineClasses() {\r\n    let classes = ['card rounded-0'];\r\n\r\n    if (this.active) {\r\n      classes.push('border-primary');\r\n      if (this.props.canDrop) {\r\n        classes.push('border-success')\r\n      }\r\n      if (this.props.isOver && this.props.canDrop) {\r\n        classes.push('bg-success')\r\n      } else {\r\n        classes.push('bg-white')\r\n      }\r\n    } else {\r\n      classes.push('border-secundary text-muted')\r\n      if (!this.props.canDrop && this.props.isOver) {\r\n        classes.push('bg-danger')\r\n      } else {\r\n        classes.push('bg-light')\r\n      }\r\n    }\r\n\r\n    return classes.join(' ')\r\n  }\r\n\r\n  modalBorderColor(type) {\r\n    switch (type) {\r\n      case EventTypes.outdoor:\r\n        return 'border-success';\r\n      case EventTypes.social:\r\n        return 'border-warning';\r\n      case EventTypes.learning:\r\n        return 'border-info';\r\n      case EventTypes.general:\r\n        return 'border-secondary'\r\n      default:\r\n        return 'border-primary'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { connectDropTarget } = this.props;\r\n\r\n    return connectDropTarget(\r\n      <div\r\n        className={this._determineClasses()}\r\n        style={this._calculateStyles()}>\r\n        <div className={'card-body customize-card'}>\r\n          <div className={'card-title text-center'}>{this.currentDay}</div>\r\n          <div className={'card-text text-center'}>\r\n            <ul className={'list-group'}>\r\n              {this._renderEvents()}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          isOpen={this.state.modalOpened}\r\n          ariaHideApp={false}\r\n          overlayClassName={'modal-overlay'}\r\n          className={'align-middle col-8 offset-2 modal-class'}\r\n        >\r\n          <div className={`card ${this.modalBorderColor(this.state.currentEvent && this.state.currentEvent.type)}`}>\r\n            <div className={'card-header text-center'}>{this.state.currentEvent && this.state.currentEvent.type.toUpperCase() + ' НАСТАН'}</div>\r\n            <div className={'card-body row'}>\r\n              <div className={'col-4'}>\r\n                <div className={'text-center'}>Од: </div>\r\n                <Timekeeper\r\n                  time={this.state.currentEvent && this.state.currentEvent.startDate.format('HH:mm')}\r\n                  onChange={newTime => this._updateCurrentEvent({ from: newTime })} />\r\n              </div>\r\n              <div className={'col-4'}>\r\n                <div className={'text-center'}>До:</div>\r\n                <Timekeeper\r\n                  time={this.state.currentEvent && this.state.currentEvent.endDate.format('HH:mm')}\r\n                  onChange={newTime => this._updateCurrentEvent({ to: newTime })} />\r\n              </div>\r\n              <div className={'col-4'}>\r\n                <div className={'text-center'}>Опис: </div>\r\n                <textarea className={'form-control'} name=\"event_description\" cols=\"30\" rows=\"10\"\r\n                  value={(this.state.currentEvent && this.state.currentEvent.description) || ''}\r\n                  onChange={(e) => { this._updateCurrentEvent({ description: e.currentTarget.value }) }}>\r\n                </textarea>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer text-right\">\r\n              <button className={'btn btn-danger'} style={{ marginRight: '15px' }} onClick={() => { this._removeEvent(this.state.originalEvent, this.state.modalState) }}>\r\n                {this.state.modalState === 'save' ? 'Откажи' : 'Избриши'}\r\n              </button>\r\n              <button className={'btn btn-primary'} onClick={() => { this._closeModal(this.state.modalState) }}>\r\n                {this.state.modalState === 'save' ? 'Додади' : 'Смени'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}))","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport Day from './Day'\r\nimport Store from '../store';\r\n\r\nexport default observer(class Calendar extends Component {\r\n\r\n  _renderDayNames() {\r\n    return Store.dayNames.map((dayName, index) => (\r\n      <div key={index} className={'bg-secondary text-white text-center'}\r\n        style={{ width: 'calc(100% / 7)', justifyContent: 'center', alignItems: 'center', marginTop: '10px' }}>\r\n        <h6>{dayName}</h6>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  _randomKeyGenerator() {\r\n    return Math.random().toString(36).substring(7);\r\n  }\r\n\r\n  _renderDays() {\r\n    if (this.props.monthData) {\r\n      let { startingDay, daysInMonth, eventsInMonth } = this.props.monthData;\r\n\r\n      const inactiveDaysBefore = Array.apply(null, Array(startingDay))\r\n        .map(() => (<Day key={this._randomKeyGenerator()} active={false} />))\r\n\r\n      const activeDays = Array.apply(null, Array(daysInMonth))\r\n        .map((_, i) => (\r\n          <Day key={this._randomKeyGenerator()} active={true} currentDay={i + 1} eventsInDay={eventsInMonth[i + 1]}></Day>\r\n        ))\r\n\r\n      let daysDisplayed = (startingDay + daysInMonth) > 35 ? 42 : 35;\r\n\r\n      const inactiveDaysAfter = Array.apply(null, Array(daysDisplayed - (startingDay + daysInMonth)))\r\n        .map(() => (<Day key={this._randomKeyGenerator()} active={false} />))\r\n\r\n      return [...inactiveDaysBefore, ...activeDays, ...inactiveDaysAfter]\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        {this._renderDayNames()}\r\n        {this._renderDays()}\r\n      </div>\r\n    )\r\n  }\r\n})","import React, { Component } from 'react';\r\nimport { DragSource } from 'react-dnd';\r\nimport EventTypes from '../models/EventTypes';\r\n\r\nconst spec = {\r\n  beginDrag(props) {\r\n    return { props };\r\n  },\r\n  endDrag(props, monitor) {\r\n    return { props }\r\n  }\r\n};\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging()\r\n  }\r\n}\r\n\r\nclass DraggableEvent extends Component {\r\n  eventType(type) {\r\n    switch (type) {\r\n      case EventTypes.outdoor:\r\n        return 'btn-success';\r\n      case EventTypes.social:\r\n        return 'btn-warning';\r\n      case EventTypes.learning:\r\n        return 'btn-info';\r\n      case EventTypes.general:\r\n        return 'btn-secondary'\r\n      default:\r\n        return 'btn-primary'\r\n    }\r\n  }\r\n  render() {\r\n    return this.props.connectDragSource(\r\n      <div className={`btn ${this.eventType(this.props.type)}`} style={{ width: '100%' }} >\r\n        {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DragSource('DraggableEvent', spec, collect)(DraggableEvent);","import React, { Component } from 'react';\r\nimport EventTypes from '../models/EventTypes';\r\nimport DraggableEvent from './DraggableEvent';\r\n\r\nexport default class Draggables extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.draggablesRef = React.createRef();\r\n  }\r\n\r\n  _scrollListenerFunction() {\r\n    let ticking = false;\r\n\r\n    if (!ticking) {\r\n      window.requestAnimationFrame(() => {\r\n        this.draggablesRef.current.style.marginTop = window.scrollY + 15 + 'px';\r\n        ticking = false;\r\n      });\r\n\r\n      ticking = true;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', () => this._scrollListenerFunction())\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', () => this._scrollListenerFunction())\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.draggablesRef} className={'card border-primary'} style={{ marginTop: '15px', transition: '0.5s margin-top' }}>\r\n        <div className={'card-body'} style={styles.draggablesBody}>\r\n          <DraggableEvent type={EventTypes.outdoor} />\r\n          <DraggableEvent type={EventTypes.social}/>\r\n          <DraggableEvent type={EventTypes.learning} />\r\n          <DraggableEvent type={EventTypes.general} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  draggablesBody: {\r\n    height: '250px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly'\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Store from '../store'\r\n\r\nexport default withRouter(class Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.history = props.history;\r\n  }\r\n\r\n  nextDate() {\r\n    Store.addMonth();\r\n    this.history.push(Store.navigationDateFormat);\r\n  }\r\n\r\n  prevDate() {\r\n    Store.subtractMonth();\r\n    this.history.push(Store.navigationDateFormat);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'col-12'} style={{ marginTop: '15px' }}>\r\n        <div className={'row'}>\r\n          <button className={'btn btn-primary col-2'} onClick={() => { this.prevDate() }}>\r\n            <span>Претходен месец</span>\r\n          </button>\r\n\r\n          <div className={'col-8'} style={styles.middleText}>\r\n            <h3 className={'text-primary'}>{Store.beautifulFormat}</h3>\r\n          </div>\r\n\r\n          <button className={'btn btn-primary col-2'} onClick={() => { this.nextDate() }}>\r\n            <span>Следен месец</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n})\r\n\r\nconst styles = {\r\n  middleText: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { observer } from \"mobx-react\";\r\nimport Calendar from '../components/Calendar'\r\nimport Draggables from '../components/Draggables'\r\nimport Navigation from '../components/Navigation'\r\nimport Store from '../store'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\nimport { DragDropContext } from 'react-dnd'\r\n\r\nclass Main extends Component {\r\n  componentWillMount(){\r\n    if(!this.props.match.params.year && !this.props.match.params.month){\r\n      this.props.history.push(Store.navigationDateFormat)\r\n    }else{\r\n      Store.setCurrentMonth(this.props.match.params.month);\r\n      Store.setCurrentYear(this.props.match.params.year)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n          <div className={'row'}>\r\n            <div className={'col-2'}>\r\n              <Draggables {...this.props} />\r\n            </div>\r\n\r\n            <div className={'col-10'}>\r\n              <Navigation {...this.props} />\r\n              <Calendar {...this.props} monthData={Store.monthData} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragDropContext(HTML5Backend)(observer(Main));\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Main from './views/Main';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/:year/:month\" component={Main} />\n\n          <footer className={\"row\"}>\n            <div className={\"col text-center\"} style={{ padding: '20px 0' }}>Изработил: Стефан Дејановски</div>\n          </footer>\n\n          <ToastContainer autoClose={4000}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\n\nReactDOM.render(<App store={store}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}